1.아래가 의도하지 않은 결과를 나타내는 이유를 설명하시오.

char ch = '가';

System.out.println(ch+'\n');

'\n'은 하나의 문자, 즉 개행 문자를 나타내는 문자 상수이기 때문이다.



2.변수의 scope 는?

변수의 scope는 {중괄호안에 있는 변수의 범위}이다.


3.지역변수?

{함수안에 있는 변수들}이다.


4.펙토리얼을 구하는 재귀 함수를 만드시오.

public class Main {
		public static void main(String[] args) {
			System.out.println(factorial(5));
	}
		public static int factorial(int num) {
			if(num==1) {
				return 1;
			}else{
				return num*factorial(num-1);
			}
		}
}



5.클래스의 구성요소는 무엇인가?

변수와 함수


6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.

-원클래스를 만들것

-메인 메소드를 가진 다른 클래스에서 원 객체를 생성할것

package java_prac;

public class Circle {
	double radius;
	
	public double getRadius() {
		return radius;
	}
	
	public void setRadius(double radius) {
		this.radius = radius;
	}
	
	public double getArea() {
		return radius*radius*Math.PI;
	}
}


package java_prac;

public class MainCircle {
	public static void main(String[] args) {
		Circle cir = new Circle();	
		cir.setRadius(10);
		
		double area = cir.getArea();
		
		System.out.println("원넓이는 : "+area);
	}
}

7.객체란 무엇인가?

클래스의 인스턴스


8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.

Rectangle rec = new Rectangle();
 
public class Rectangle {
	int height;
	int width;
	
	public int getHeight() {
		return height;
	}
	
	public void setHeight(int height) {
		this.height = height;
	}
	
	public int getWidth() {
		return width;
	}
	
	public void setWidth(int width) {
		this.width = width;
	}
	
	public int getArea() {
		return width * height;
	}
	
}
9.클래스와 객체의 차이는 무엇인가?

클래스는 설계도, 객체는 설계도로 구현한 모든 대상




10.아래의 프로그램을 작성하시오. 
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오. 

public class Main {
		public static void main(String[] args) {
			total(9);
	}
		public static void total(int num) {
			int sum=0;
				for(int i=1; i<=num; i++) 
					sum+=i;
				System.out.println(sum);
		}			
	}


11.아래의 클래스를 작성하시오.

StraPrint strPrint = new StarPrint();

strPrint.printTriangle(3); 
System.out.println();
strPrint.printReverseTriangle(3); 
===============================
*
**
***

***
**
*
package java_rec;

public class StarPrint {
	
	public int printTriangle(int num1) {
		for(int i = 1; i<=num1; i++) {
			for(int j=1; j<=i; j++){
				System.out.print("*");
			}
			System.out.println();
		}
		return num1;
	}
	
	public int printReverseTriangle(int num2) {
		for(int i = num2; i>=1; i--) {
			for(int j=1; j<=i; j++){
				System.out.print("*");
			}
			System.out.println();
		}
		return num2;
	}
}
package java_rec;

public class StarPrint00 {
	public static void main(String[] args) {
		
		StarPrint strPrint = new StarPrint();
	
		strPrint.printTriangle(3); 
		System.out.println();
		strPrint.printReverseTriangle(3);			
	}
}


12.아래의 프로그래밍을 작성하시오.

Gugudan gugudan = new Gugudan();
gugudan.printGugu(10);  //1단부터 10단까지 출력
gugudan.printGugu(20);  //1단부터 20단까지 출력
package java_rec;

public class Gugudan {
	
	public int printGugu(int num1) {
		for(int i = 2; i<=num1; i++) {
			for(int j=1; j<=9; j++){
				System.out.println(i+"x"+j+"="+i*j);
			}
			System.out.println();
		}
		return num1;
	}	
}
package java_rec;

public class Gugudan00 {
	public static void main(String[] args) {
		
		Gugudan gugudan = new Gugudan();
		
		gugudan.printGugu(10); 
		gugudan.printGugu(20); 	
	}
}






13. 아래의 BankAccount 객체에 대하여 그림을 그리시오.

   BankAccount ref1 = new BankAccount();
   BankAccount ref2 = ref1;
