1.상속을 UML로 표기해 보세요.

BusinessMan(자식)→Man(부모)


2.부모클래스와 자식클래스의 다른 용어들은?

상위클래스와 하위클래스 


3.super 키워드와 this 키워드의 차이는 무엇인가요?

this는 생성자호출, super는 부모클래스 생성자 호출


4.단일 상속과 다중상속 이란?

단일상속은 부모클래스 1개만 상속받을 수 있고, 다중 상속은 여러개 받을 수 있다.


5.다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.



String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라. "그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)

과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만
[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.

String name;
if(course[i].equals(name)) {
    int n = score[i];
    ...
}
==================================
package java_1210_prac;
 
import java.util.Scanner;
 
public class Score {
 
	private static int i;
	private static String name;
 
	public static void main(String[] args) {
 
		String course[] = { "Java", "C++", "HTML5", "컴퓨터구조", "안드로이드" };
		int score[] = { 95, 88, 76, 62, 55 };
		// System.out.print("과목 이름 >> ");
		Scanner sc = new Scanner(System.in);
 
		while (true) {
			System.out.print("과목 이름 >> ");
			String name = sc.nextLine();
			for (int i = course.length - 5; i < course.length; i++) {
				if (course[i].equals(name)) {
					int n = score[i];
					System.out.println(course[i]+"의 점수는 "+n+"점입니다");
 
				} else if (name.equals("그만")) {
					return;
				}
			}
			if (!course[i].equals(name) && !course[i].equals("그만")) {
				System.out.println("없는 과목입니다.");
				
			}
			
		}
 
	}
}//오류



6.다음은 2차원 상의 한 점을 표현하는 Point 클래스이다.

class Point {
   private int x, y;
   public Point(int x, int y) { this.x = x; this.y = y; }
   public int getX() { return x; }
   public int getY() { return y; }
   protected void move(int x, int y) { this.x =x; this.y = y; }
}


Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
   cp.setXY(10, 20);
   cp.setColor("RED");
   String str = cp.toString();
   System.out.println(str+"입니다. ");
}
===================================
package java_1210_prac;

class Point {
	protected int x;
	protected int y;
	public String color;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public String toString() {
		System.out.println(color + "색의 (" + this.x + ", " + this.y + ")의 점입니다.");

		return "";
	}

}

class ColorPoint extends Point {

	public ColorPoint(int x, int y, String color) {
		super(x, y);
		this.color = color;

	}

	public void setXY(int x, int y) {
		this.x = x;
		this.y = y;

	}

	public void setColor(String color) {

		this.color = color;

	}

}

public class PointMain {
	public static void main(String[] args) {

		ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
		cp.setXY(10, 20);
		cp.setColor("RED");
		String str = cp.toString();

	}
}



7.Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
   System.out.println(zeroPoint.toString() + "입니다.");
   ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
   cp.setXY(5,5);
   cp.setColor("RED");
   System.out.println(cp.toString()+"입니다.");
}
=========================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.
package java_1210_prac;//미완성

class Point {
	private int x, y;
	public String color;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public void setXY(int x, int y) {
	}

	public void setColor(String string) {
	}

	public String toString() {
		System.out.println(color+ "색의 (" + this.x + ", " + this.y + ")의 점입니다.");

		return "";
	}

}

class ColorPoint extends Point {

	public ColorPoint() {
		super(x, y);
		this.color = color;
	}

	public ColorPoint(int x, int y) {
		// TODO Auto-generated constructor stub
	}

}

public class PointMain2 {
	ppublic static void main(String[] args) {
		   ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
		   System.out.println(zeroPoint.toString() + "입니다.");
		   ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
		   cp.setXY(5,5);
		   cp.setColor("RED");
		   System.out.println(cp.toString()+"입니다.");
		}
		=========================
		BLACK색의 (0,0) 점입니다.
		RED색의 (5,5) 점입니다.
		
	}
}






8.Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
   System.out.println(p.toString()+"입니다.");
   p.moveUp(); // z 축으로 위쪽 이동
   System.out.println(p.toString()+"입니다.");
   p.moveDown(); // z 축으로 아래쪽 이동
   p.move(10, 10); // x, y 축으로 이동
   System.out.println(p.toString()+"입니다.");
   p.move(100,  200, 300); // x, y, z축으로 이동
   System.out.println(p.toString()+"입니다.");
}

//z만 






(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.




9.배열을 이용하여 간단한 극장 예약 시스템을 작성하여 보자. 

아주 작은 극장이라서 좌석이 10개 밖에 되지 않는다. 

사용자가 예약을 하려고 하면 먼저 좌석 배치표를 보여준다. 

즉, 예약이 끝난 좌석은 1로, 예약이 되지 않은 좌석은 0으로 나타낸다.
